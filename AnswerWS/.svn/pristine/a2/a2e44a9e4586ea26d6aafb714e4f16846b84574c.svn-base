#ifndef _FORTUNE_HH_
#define _FORTUNE_HH_
#include <anubis/webservice/Invoker.hh>
#include <anubis/webservice/WebMethod.hh>

using namespace std;

class Fortune: public anubis::webservice::WebMethod<void, std::string>
{
	virtual void process();
};

//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-//

struct FortuneWithStateResponse{
	std::string fortune;
	std::string previousFortune;
};

std::ostream& operator<< (std::ostream& out, const FortuneWithStateResponse &data ){
	out << "<fortune>" << data.fortune << "</fortune>";
	out << "<previousFortune>" << data.previousFortune << "</previousFortune>";
	return out;
}

class FortuneWithState: public anubis::webservice::WebMethod<void, FortuneWithStateResponse>
{
	virtual void process();
};

REGISTER_WEBMETHOD(Fortune, "fortune")
// REGISTER_WEBMETHOD_SINGLETON(FortuneWithState, "fortune_state")

#endif // _FORTUNE_HH_
